
*CActiveDataProvider*   >> |CDataProvider| >> |CComponent|
=====================

 CActiveDataProvider implements a data provider based on ActiveRecord.

 CActiveDataProvider provides data in terms of ActiveRecord objects which are
 of class |CActiveDataProvider::modelClass|. It uses the AR
 |CActiveRecord::findAll| method to retrieve the data from database. The
 |CActiveDataProvider::criteria| property can be used to specify various query
 options.

 CActiveDataProvider may be used in the following way:
>
 $dataProvider=new CActiveDataProvider('Post', array(
     'criteria'=>array(
         'condition'=>'status=1',
         'order'=>'create_time DESC',
         'with'=>array('author'),
     ),
     'pagination'=>array(
         'pageSize'=>20,
     ),
 ));
 // $dataProvider->getData() will return a list of Post objects
<


PROPERTY DETAILS
------------------------------------------------------------------------------

<criteria>				*CActiveDataProvider::criteria*
 (CDbCriteria) Returns the query criteria.

<data>					*CActiveDataProvider::data*
 See |CDataProvider::data|

<id>					*CActiveDataProvider::id*
 See |CDataProvider::id|

<itemCount>				*CActiveDataProvider::itemCount*
 See |CDataProvider::itemCount|

<keyAttribute>				*CActiveDataProvider::keyAttribute*
 (string) the name of key attribute for |CActiveDataProvider::modelClass|. If
 not set, it means the primary key of the corresponding database table will be
 used.

<keys>					*CActiveDataProvider::keys*
 See |CDataProvider::keys|

<model> 				*CActiveDataProvider::model*
 (CActiveRecord) the AR finder instance (eg 'Post::model()'). This property
 can be set by passing the finder instance as the first parameter to the
 constructor. For example, 'Post::model()->published()'.

<modelClass>				*CActiveDataProvider::modelClass*
 (string) the primary ActiveRecord class name. The
 |CActiveDataProvider::getData| method will return a list of objects of this
 class.

<pagination>				*CActiveDataProvider::pagination*
 See |CDataProvider::pagination|

<sort>					*CActiveDataProvider::sort*
 (CSort) Returns the sorting object.

<totalItemCount>			*CActiveDataProvider::totalItemCount*
 See |CDataProvider::totalItemCount|



METHOD DETAILS
------------------------------------------------------------------------------

*CActiveDataProvider::__call*					 public
 See |CComponent::__call|


*CActiveDataProvider::__construct*				 public
>
 __construct($modelClass, $config=array())
<
(void)

 Constructor.
    [modelClass] (mixed) the model class (e.g. 'Post') or the model finder
    instance (e.g. 'Post::model()', 'Post::model()->published()').
    [config] (array) configuration (name=>value) to be applied as the initial
    property values of this class.


*CActiveDataProvider::__get*					 public
 See |CComponent::__get|


*CActiveDataProvider::__isset*					 public
 See |CComponent::__isset|


*CActiveDataProvider::__set*					 public
 See |CComponent::__set|


*CActiveDataProvider::__unset*					 public
 See |CComponent::__unset|


*CActiveDataProvider::asa*					 public
 See |CComponent::asa|


*CActiveDataProvider::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CActiveDataProvider::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CActiveDataProvider::attachEventHandler*			 public
 See |CComponent::attachEventHandler|


*CActiveDataProvider::calculateTotalItemCount*			 protected
>
 calculateTotalItemCount()
<
(integer) the total number of data items.

 Calculates the total number of data items.


*CActiveDataProvider::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CActiveDataProvider::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CActiveDataProvider::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CActiveDataProvider::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CActiveDataProvider::detachEventHandler*			 public
 See |CComponent::detachEventHandler|


*CActiveDataProvider::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CActiveDataProvider::disableBehaviors* 			 public
 See |CComponent::disableBehaviors|


*CActiveDataProvider::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CActiveDataProvider::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CActiveDataProvider::evaluateExpression*			 public
 See |CComponent::evaluateExpression|


*CActiveDataProvider::fetchData*				 protected
>
 fetchData()
<
(array) list of data items

 Fetches the data from the persistent data storage.


*CActiveDataProvider::fetchKeys*				 protected
>
 fetchKeys()
<
(array) list of data item keys.

 Fetches the data item keys from the persistent data storage.


*CActiveDataProvider::getCriteria*				 public
>
 getCriteria()
<
(CDbCriteria) the query criteria

 Returns the query criteria.


*CActiveDataProvider::getData*					 public
 See |CDataProvider::getData|


*CActiveDataProvider::getEventHandlers* 			 public
 See |CComponent::getEventHandlers|


*CActiveDataProvider::getId*					 public
 See |CDataProvider::getId|


*CActiveDataProvider::getItemCount*				 public
 See |CDataProvider::getItemCount|


*CActiveDataProvider::getKeys*					 public
 See |CDataProvider::getKeys|


*CActiveDataProvider::getPagination*				 public
 See |CDataProvider::getPagination|


*CActiveDataProvider::getSort*					 public
>
 getSort($className='CSort')
<
(CSort) the sorting object. If this is false, it means the sorting is
disabled.

 Returns the sorting object.
    [className] (string) the sorting object class name. Parameter is available
    since version 1.1.13.


*CActiveDataProvider::getTotalItemCount*			 public
 See |CDataProvider::getTotalItemCount|


*CActiveDataProvider::hasEvent* 				 public
 See |CComponent::hasEvent|


*CActiveDataProvider::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CActiveDataProvider::hasProperty*				 public
 See |CComponent::hasProperty|


*CActiveDataProvider::raiseEvent*				 public
 See |CComponent::raiseEvent|


*CActiveDataProvider::setCriteria*				 public
>
 setCriteria($value)
<
(void)

 Sets the query criteria.
    [value] (mixed) the query criteria. This can be either a CDbCriteria
    object or an array representing the query criteria.


*CActiveDataProvider::setData*					 public
 See |CDataProvider::setData|


*CActiveDataProvider::setId*					 public
 See |CDataProvider::setId|


*CActiveDataProvider::setKeys*					 public
 See |CDataProvider::setKeys|


*CActiveDataProvider::setPagination*				 public
 See |CDataProvider::setPagination|


*CActiveDataProvider::setSort*					 public
 See |CDataProvider::setSort|


*CActiveDataProvider::setTotalItemCount*			 public
 See |CDataProvider::setTotalItemCount|



 vim:tw=78:ts=8:ft=help:norl:
