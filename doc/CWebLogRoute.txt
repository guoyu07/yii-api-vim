
*CWebLogRoute*   >> |CLogRoute| >> |CComponent|
==============

 CWebLogRoute shows the log content in Web page.

 The log content can appear either at the end of the current Web page or in
 FireBug console window (if |CWebLogRoute::showInFireBug| is set true).


PROPERTY DETAILS
------------------------------------------------------------------------------

<categories>				*CWebLogRoute::categories*
 See |CLogRoute::categories|

<collapsedInFireBug>			*CWebLogRoute::collapsedInFireBug*
 (boolean) whether the log should be collapsed by default in Firebug. Defaults
 to false.

<enabled>				*CWebLogRoute::enabled*
 See |CLogRoute::enabled|

<except>				*CWebLogRoute::except*
 See |CLogRoute::except|

<filter>				*CWebLogRoute::filter*
 See |CLogRoute::filter|

<ignoreAjaxInFireBug>			*CWebLogRoute::ignoreAjaxInFireBug*
 (boolean) whether the log should be ignored in FireBug for ajax calls.
 Defaults to true. This option should be used carefully, because an ajax call
 returns all output as a result data. For example if the ajax call expects a
 json type result any output from the logger will cause ajax call to fail.

<ignoreFlashInFireBug>			*CWebLogRoute::ignoreFlashInFireBug*
 (boolean) whether the log should be ignored in FireBug for Flash/Flex calls.
 Defaults to true. This option should be used carefully, because an Flash/Flex
 call returns all output as a result data. For example if the Flash/Flex call
 expects an XML type result any output from the logger will cause Flash/Flex
 call to fail.

<levels>				*CWebLogRoute::levels*
 See |CLogRoute::levels|

<logs>					*CWebLogRoute::logs*
 See |CLogRoute::logs|

<showInFireBug> 			*CWebLogRoute::showInFireBug*
 (boolean) whether the log should be displayed in FireBug instead of browser
 window. Defaults to false.



METHOD DETAILS
------------------------------------------------------------------------------

*CWebLogRoute::__call*						 public
 See |CComponent::__call|


*CWebLogRoute::__get*						 public
 See |CComponent::__get|


*CWebLogRoute::__isset* 					 public
 See |CComponent::__isset|


*CWebLogRoute::__set*						 public
 See |CComponent::__set|


*CWebLogRoute::__unset* 					 public
 See |CComponent::__unset|


*CWebLogRoute::asa*						 public
 See |CComponent::asa|


*CWebLogRoute::attachBehavior*					 public
 See |CComponent::attachBehavior|


*CWebLogRoute::attachBehaviors* 				 public
 See |CComponent::attachBehaviors|


*CWebLogRoute::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CWebLogRoute::canGetProperty*					 public
 See |CComponent::canGetProperty|


*CWebLogRoute::canSetProperty*					 public
 See |CComponent::canSetProperty|


*CWebLogRoute::collectLogs*					 public
 See |CLogRoute::collectLogs|


*CWebLogRoute::detachBehavior*					 public
 See |CComponent::detachBehavior|


*CWebLogRoute::detachBehaviors* 				 public
 See |CComponent::detachBehaviors|


*CWebLogRoute::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CWebLogRoute::disableBehavior* 				 public
 See |CComponent::disableBehavior|


*CWebLogRoute::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CWebLogRoute::enableBehavior*					 public
 See |CComponent::enableBehavior|


*CWebLogRoute::enableBehaviors* 				 public
 See |CComponent::enableBehaviors|


*CWebLogRoute::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CWebLogRoute::formatLogMessage*				 protected
 See |CLogRoute::formatLogMessage|


*CWebLogRoute::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CWebLogRoute::hasEvent*					 public
 See |CComponent::hasEvent|


*CWebLogRoute::hasEventHandler* 				 public
 See |CComponent::hasEventHandler|


*CWebLogRoute::hasProperty*					 public
 See |CComponent::hasProperty|


*CWebLogRoute::init*						 public
 See |CLogRoute::init|


*CWebLogRoute::processLogs*					 public
>
 processLogs($logs)
<
(void)

 Displays the log messages.
    [logs] (array) list of log messages


*CWebLogRoute::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CWebLogRoute::render*						 protected
>
 render($view, $data)
<
(void)

 Renders the view.
    [view] (string) the view name (file name without extension). The file is
    assumed to be located under framework/data/views.
    [data] (array) data to be passed to the view



 vim:tw=78:ts=8:ft=help:norl:
