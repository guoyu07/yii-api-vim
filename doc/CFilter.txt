
*CFilter*   >> |CComponent|
=========

 CFilter is the base class for all filters.

 A filter can be applied before and after an action is executed. It can modify
 the context that the action is to run or decorate the result that the action
 generates.

 Override |CFilter::preFilter| to specify the filtering logic that should be
 applied before the action, and |CFilter::postFilter| for filtering logic
 after the action.



METHOD DETAILS
------------------------------------------------------------------------------

*CFilter::__call*						 public
 See |CComponent::__call|


*CFilter::__get*						 public
 See |CComponent::__get|


*CFilter::__isset*						 public
 See |CComponent::__isset|


*CFilter::__set*						 public
 See |CComponent::__set|


*CFilter::__unset*						 public
 See |CComponent::__unset|


*CFilter::asa*							 public
 See |CComponent::asa|


*CFilter::attachBehavior*					 public
 See |CComponent::attachBehavior|


*CFilter::attachBehaviors*					 public
 See |CComponent::attachBehaviors|


*CFilter::attachEventHandler*					 public
 See |CComponent::attachEventHandler|


*CFilter::canGetProperty*					 public
 See |CComponent::canGetProperty|


*CFilter::canSetProperty*					 public
 See |CComponent::canSetProperty|


*CFilter::detachBehavior*					 public
 See |CComponent::detachBehavior|


*CFilter::detachBehaviors*					 public
 See |CComponent::detachBehaviors|


*CFilter::detachEventHandler*					 public
 See |CComponent::detachEventHandler|


*CFilter::disableBehavior*					 public
 See |CComponent::disableBehavior|


*CFilter::disableBehaviors*					 public
 See |CComponent::disableBehaviors|


*CFilter::enableBehavior*					 public
 See |CComponent::enableBehavior|


*CFilter::enableBehaviors*					 public
 See |CComponent::enableBehaviors|


*CFilter::evaluateExpression*					 public
 See |CComponent::evaluateExpression|


*CFilter::filter*						 public
>
 filter($filterChain)
<
(void)

 Performs the filtering. The default implementation is to invoke
 |CFilter::preFilter| and |CFilter::postFilter| which are meant to be
 overridden child classes. If a child class needs to override this method,
 make sure it calls '$filterChain->run()' if the action should be executed.
    [filterChain] (CFilterChain) the filter chain that the filter is on.


*CFilter::getEventHandlers*					 public
 See |CComponent::getEventHandlers|


*CFilter::hasEvent*						 public
 See |CComponent::hasEvent|


*CFilter::hasEventHandler*					 public
 See |CComponent::hasEventHandler|


*CFilter::hasProperty*						 public
 See |CComponent::hasProperty|


*CFilter::init* 						 public
>
 init()
<
(void)

 Initializes the filter. This method is invoked after the filter properties
 are initialized and before |CFilter::preFilter| is called. You may override
 this method to include some initialization logic.


*CFilter::postFilter*						 protected
>
 postFilter($filterChain)
<
(void)

 Performs the post-action filtering.
    [filterChain] (CFilterChain) the filter chain that the filter is on.


*CFilter::preFilter*						 protected
>
 preFilter($filterChain)
<
(boolean) whether the filtering process should continue and the action should
be executed.

 Performs the pre-action filtering.
    [filterChain] (CFilterChain) the filter chain that the filter is on.


*CFilter::raiseEvent*						 public
 See |CComponent::raiseEvent|



 vim:tw=78:ts=8:ft=help:norl:
