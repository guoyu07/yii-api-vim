
*CZendDataCache*   >> |CCache| >> |CApplicationComponent| >> |CComponent|
================

 CZendDataCache implements a cache application module based on the Zend Data
 Cache delivered with 'ZendServer'.

 To use this application component, the Zend Data Cache PHP extension must be
 loaded.

 See |CCache| manual for common cache operations that are supported by
 CZendDataCache.



METHOD DETAILS
------------------------------------------------------------------------------

*CZendDataCache::__call*					 public
 See |CComponent::__call|


*CZendDataCache::__get* 					 public
 See |CComponent::__get|


*CZendDataCache::__isset*					 public
 See |CComponent::__isset|


*CZendDataCache::__set* 					 public
 See |CComponent::__set|


*CZendDataCache::__unset*					 public
 See |CComponent::__unset|


*CZendDataCache::add*						 public
 See |CCache::add|


*CZendDataCache::addValue*					 protected
>
 addValue($key, $value, $expire)
<
(boolean) true if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key into cache if the cache does not contain
 this key. This is the implementation of the method declared in the parent
 class.
    [key] (string) the key identifying the value to be cached
    [value] (string) the value to be cached
    [expire] (integer) the number of seconds in which the cached value will
    expire. 0 means never expire.


*CZendDataCache::asa*						 public
 See |CComponent::asa|


*CZendDataCache::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CZendDataCache::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CZendDataCache::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CZendDataCache::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CZendDataCache::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CZendDataCache::delete*					 public
 See |CCache::delete|


*CZendDataCache::deleteValue*					 protected
>
 deleteValue($key)
<
(boolean) if no error happens during deletion

 Deletes a value with the specified key from cache This is the implementation
 of the method declared in the parent class.
    [key] (string) the key of the value to be deleted


*CZendDataCache::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CZendDataCache::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CZendDataCache::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CZendDataCache::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CZendDataCache::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CZendDataCache::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CZendDataCache::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CZendDataCache::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CZendDataCache::flush* 					 public
 See |CCache::flush|


*CZendDataCache::flushValues*					 protected
>
 flushValues()
<
(boolean) whether the flush operation was successful.

 Deletes all values from cache. This is the implementation of the method
 declared in the parent class.


*CZendDataCache::generateUniqueKey*				 protected
 See |CCache::generateUniqueKey|


*CZendDataCache::get*						 public
 See |CCache::get|


*CZendDataCache::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CZendDataCache::getIsInitialized*				 public
 See |CApplicationComponent::getIsInitialized|


*CZendDataCache::getValue*					 protected
>
 getValue($key)
<
(string) the value stored in cache, false if the value is not in the cache or
expired.

 Retrieves a value from cache with a specified key. This is the implementation
 of the method declared in the parent class.
    [key] (string) a unique key identifying the cached value


*CZendDataCache::getValues*					 protected
 See |CCache::getValues|


*CZendDataCache::hasEvent*					 public
 See |CComponent::hasEvent|


*CZendDataCache::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CZendDataCache::hasProperty*					 public
 See |CComponent::hasProperty|


*CZendDataCache::init*						 public
>
 init()
<
(void)

 Initializes this application component. This method is required by the
 |IApplicationComponent| interface. It checks the availability of Zend Data
 Cache.


*CZendDataCache::mget*						 public
 See |CCache::mget|


*CZendDataCache::offsetExists*					 public
 See |CCache::offsetExists|


*CZendDataCache::offsetGet*					 public
 See |CCache::offsetGet|


*CZendDataCache::offsetSet*					 public
 See |CCache::offsetSet|


*CZendDataCache::offsetUnset*					 public
 See |CCache::offsetUnset|


*CZendDataCache::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CZendDataCache::set*						 public
 See |CCache::set|


*CZendDataCache::setValue*					 protected
>
 setValue($key, $value, $expire)
<
(boolean) true if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key in cache. This is the implementation of
 the method declared in the parent class.
    [key] (string) the key identifying the value to be cached
    [value] (string) the value to be cached
    [expire] (integer) the number of seconds in which the cached value will
    expire. 0 means never expire.



 vim:tw=78:ts=8:ft=help:norl:
