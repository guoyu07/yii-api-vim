
*IWebUser*  
==========

 IWebUser interface is implemented by a |CWebApplication::user|.

 A user application component represents the identity information for the
 current user.



METHOD DETAILS
------------------------------------------------------------------------------

*IWebUser::checkAccess* 					 public
>
 checkAccess($operation, $params=array())
<
(boolean) whether the operations can be performed by this user.

 Performs access check for this user.
    [operation] (string) the name of the operation that need access check.
    [params] (array) name-value pairs that would be passed to business rules
    associated with the tasks and roles assigned to the user.


*IWebUser::getId*						 public
>
 getId()
<
(mixed) a value that uniquely represents the identity (e.g. primary key
value).

 Returns a value that uniquely represents the identity.


*IWebUser::getIsGuest*						 public
>
 getIsGuest()
<
(boolean) whether the user is a guest (not authenticated)

 Returns a value indicating whether the user is a guest (not authenticated).


*IWebUser::getName*						 public
>
 getName()
<
(string) the display name for the identity.

 Returns the display name for the identity (e.g. username).


*IWebUser::loginRequired*					 public
>
 loginRequired()
<
(void)

 Redirects the user browser to the login page. Before the redirection, the
 current URL (if it's not an AJAX url) will be kept in returnUrl so that the
 user browser may be redirected back to the current page after successful
 login. Make sure you set loginUrl so that the user browser can be redirected
 to the specified login URL after calling this method. After calling this
 method, the current request processing will be terminated.



 vim:tw=78:ts=8:ft=help:norl:
