
*CMaskedTextField*   >> |CInputWidget| >> |CWidget| >> |CBaseController| >> |CComponent|
==================

 CMaskedTextField generates a masked text field.

 CMaskedTextField is similar to |CHtml::textField| except that an input mask
 will be used to help users enter properly formatted data. The masked text
 field is implemented based on the jQuery masked input plugin (see
 'http://digitalbush.com/projects/masked-input-plugin').


PROPERTY DETAILS
------------------------------------------------------------------------------

<actionPrefix>				*CMaskedTextField::actionPrefix*
 See |CWidget::actionPrefix|

<attribute>				*CMaskedTextField::attribute*
 See |CInputWidget::attribute|

<charMap>				*CMaskedTextField::charMap*
 (array) the mapping between mask characters and the corresponding patterns.
 For example, array('~'=>'[+-]') specifies that the '~' character expects '+'
 or '-' input. Defaults to null, meaning using the map as described in
 |CMaskedTextField::mask|.

<clientOptions> 			*CMaskedTextField::clientOptions*
 (array) the options for the text field

<completed>				*CMaskedTextField::completed*
 (string) a JavaScript function callback that will be invoked when user
 finishes the input.

<controller>				*CMaskedTextField::controller*
 See |CWidget::controller|

<htmlOptions>				*CMaskedTextField::htmlOptions*
 See |CInputWidget::htmlOptions|

<id>					*CMaskedTextField::id*
 See |CWidget::id|

<mask>					*CMaskedTextField::mask*
 (string) the input mask (e.g. '99/99/9999' for date input). The following
 characters are predefined:
   {a} represents an alpha character (A-Z,a-z).
   {9} represents a numeric character (0-9).
   *: represents an alphanumeric character (A-Z,a-z,0-9).
   ?: anything listed after '?' within the mask is considered
   optional user input.Additional characters can be defined by specifying the
 |CMaskedTextField::charMap| property.

<model> 				*CMaskedTextField::model*
 See |CInputWidget::model|

<name>					*CMaskedTextField::name*
 See |CInputWidget::name|

<owner> 				*CMaskedTextField::owner*
 See |CWidget::owner|

<placeholder>				*CMaskedTextField::placeholder*
 (string) the character prompting for user input. Defaults to underscore '_'.

<skin>					*CMaskedTextField::skin*
 See |CWidget::skin|

<value> 				*CMaskedTextField::value*
 See |CInputWidget::value|

<viewPath>				*CMaskedTextField::viewPath*
 See |CWidget::viewPath|



METHOD DETAILS
------------------------------------------------------------------------------

*CMaskedTextField::__call*					 public
 See |CComponent::__call|


*CMaskedTextField::__construct* 				 public
 See |CWidget::__construct|


*CMaskedTextField::__get*					 public
 See |CComponent::__get|


*CMaskedTextField::__isset*					 public
 See |CComponent::__isset|


*CMaskedTextField::__set*					 public
 See |CComponent::__set|


*CMaskedTextField::__unset*					 public
 See |CComponent::__unset|


*CMaskedTextField::actions*					 public
 See |CWidget::actions|


*CMaskedTextField::asa* 					 public
 See |CComponent::asa|


*CMaskedTextField::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CMaskedTextField::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CMaskedTextField::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CMaskedTextField::beginCache*					 public
 See |CBaseController::beginCache|


*CMaskedTextField::beginClip*					 public
 See |CBaseController::beginClip|


*CMaskedTextField::beginContent*				 public
 See |CBaseController::beginContent|


*CMaskedTextField::beginWidget* 				 public
 See |CBaseController::beginWidget|


*CMaskedTextField::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CMaskedTextField::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CMaskedTextField::createWidget*				 public
 See |CBaseController::createWidget|


*CMaskedTextField::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CMaskedTextField::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CMaskedTextField::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CMaskedTextField::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CMaskedTextField::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CMaskedTextField::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CMaskedTextField::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CMaskedTextField::endCache*					 public
 See |CBaseController::endCache|


*CMaskedTextField::endClip*					 public
 See |CBaseController::endClip|


*CMaskedTextField::endContent*					 public
 See |CBaseController::endContent|


*CMaskedTextField::endWidget*					 public
 See |CBaseController::endWidget|


*CMaskedTextField::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CMaskedTextField::getClientOptions*				 protected
>
 getClientOptions()
<
(array) the options for the text field



*CMaskedTextField::getController*				 public
 See |CWidget::getController|


*CMaskedTextField::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CMaskedTextField::getId*					 public
 See |CWidget::getId|


*CMaskedTextField::getOwner*					 public
 See |CWidget::getOwner|


*CMaskedTextField::getViewFile* 				 public
 See |CWidget::getViewFile|


*CMaskedTextField::getViewPath* 				 public
 See |CWidget::getViewPath|


*CMaskedTextField::hasEvent*					 public
 See |CComponent::hasEvent|


*CMaskedTextField::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CMaskedTextField::hasModel*					 protected
 See |CInputWidget::hasModel|


*CMaskedTextField::hasProperty* 				 public
 See |CComponent::hasProperty|


*CMaskedTextField::init*					 public
 See |CWidget::init|


*CMaskedTextField::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CMaskedTextField::registerClientScript*			 public
>
 registerClientScript()
<
(void)

 Registers the needed CSS and JavaScript.


*CMaskedTextField::render*					 public
 See |CWidget::render|


*CMaskedTextField::renderFile*					 public
 See |CBaseController::renderFile|


*CMaskedTextField::renderInternal*				 public
 See |CBaseController::renderInternal|


*CMaskedTextField::resolveNameID*				 protected
 See |CInputWidget::resolveNameID|


*CMaskedTextField::run* 					 public
>
 run()
<
(void)

 Executes the widget. This method registers all needed client scripts and
 renders the text field.


*CMaskedTextField::setId*					 public
 See |CWidget::setId|


*CMaskedTextField::widget*					 public
 See |CBaseController::widget|



 vim:tw=78:ts=8:ft=help:norl:
