
*CNumberValidator*   >> |CValidator| >> |CComponent|
==================

 CNumberValidator validates that the attribute value is a number.

 In addition to the |CNumberValidator::message| property for setting a custom
 error message, CNumberValidator has a couple custom error messages you can
 set that correspond to different validation scenarios. To specify a custom
 message when the numeric value is too big, you may use the
 |CNumberValidator::tooBig| property. Similarly with
 |CNumberValidator::tooSmall|. The messages may contain additional
 placeholders that will be replaced with the actual content. In addition to
 the "{attribute}" placeholder, recognized by all validators (see
 |CValidator|), CNumberValidator allows for the following placeholders to be
 specified:
   {min}: when using |CNumberValidator::tooSmall|, replaced with the
   lower limit of the number |CNumberValidator::min|.
   {max}: when using |CNumberValidator::tooBig|, replaced with the
   upper limit of the number |CNumberValidator::max|.


PROPERTY DETAILS
------------------------------------------------------------------------------

<allowEmpty>				*CNumberValidator::allowEmpty*
 (boolean) whether the attribute value can be null or empty. Defaults to true,
 meaning that if the attribute is empty, it is considered valid.

<attributes>				*CNumberValidator::attributes*
 See |CValidator::attributes|

<builtInValidators>			*CNumberValidator::builtInValidators*
 See |CValidator::builtInValidators|

<enableClientValidation>		*CNumberValidator::enableClientValidation*
 See |CValidator::enableClientValidation|

<except>				*CNumberValidator::except*
 See |CValidator::except|

<integerOnly>				*CNumberValidator::integerOnly*
 (boolean) whether the attribute value can only be an integer. Defaults to
 false.

<integerPattern>			*CNumberValidator::integerPattern*
 (string) the regular expression for matching integers.

<max>					*CNumberValidator::max*
 (integer|float) upper limit of the number. Defaults to null, meaning no upper
 limit.

<message>				*CNumberValidator::message*
 See |CValidator::message|

<min>					*CNumberValidator::min*
 (integer|float) lower limit of the number. Defaults to null, meaning no lower
 limit.

<numberPattern> 			*CNumberValidator::numberPattern*
 (string) the regular expression for matching numbers.

<on>					*CNumberValidator::on*
 See |CValidator::on|

<safe>					*CNumberValidator::safe*
 See |CValidator::safe|

<skipOnError>				*CNumberValidator::skipOnError*
 See |CValidator::skipOnError|

<tooBig>				*CNumberValidator::tooBig*
 (string) user-defined error message used when the value is too big.

<tooSmall>				*CNumberValidator::tooSmall*
 (string) user-defined error message used when the value is too small.



METHOD DETAILS
------------------------------------------------------------------------------

*CNumberValidator::__call*					 public
 See |CComponent::__call|


*CNumberValidator::__get*					 public
 See |CComponent::__get|


*CNumberValidator::__isset*					 public
 See |CComponent::__isset|


*CNumberValidator::__set*					 public
 See |CComponent::__set|


*CNumberValidator::__unset*					 public
 See |CComponent::__unset|


*CNumberValidator::addError*					 protected
 See |CValidator::addError|


*CNumberValidator::applyTo*					 public
 See |CValidator::applyTo|


*CNumberValidator::asa* 					 public
 See |CComponent::asa|


*CNumberValidator::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CNumberValidator::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CNumberValidator::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CNumberValidator::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CNumberValidator::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CNumberValidator::clientValidateAttribute*			 public
>
 clientValidateAttribute($object, $attribute)
<
(string) the client-side validation script.

 Returns the JavaScript needed for performing client-side validation.
    [object] (CModel) the data object being validated
    [attribute] (string) the name of the attribute to be validated.


*CNumberValidator::createValidator*				 public
 See |CValidator::createValidator|


*CNumberValidator::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CNumberValidator::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CNumberValidator::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CNumberValidator::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CNumberValidator::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CNumberValidator::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CNumberValidator::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CNumberValidator::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CNumberValidator::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CNumberValidator::hasEvent*					 public
 See |CComponent::hasEvent|


*CNumberValidator::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CNumberValidator::hasProperty* 				 public
 See |CComponent::hasProperty|


*CNumberValidator::isEmpty*					 protected
 See |CValidator::isEmpty|


*CNumberValidator::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CNumberValidator::validate*					 public
 See |CValidator::validate|


*CNumberValidator::validateAttribute*				 protected
>
 validateAttribute($object, $attribute)
<
(void)

 Validates the attribute of the object. If there is any error, the error
 message is added to the object.
    [object] (CModel) the object being validated
    [attribute] (string) the attribute being validated



 vim:tw=78:ts=8:ft=help:norl:
