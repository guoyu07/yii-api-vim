
*CSqlDataProvider*   >> |CDataProvider| >> |CComponent|
==================

 CSqlDataProvider implements a data provider based on a plain SQL statement.

 CSqlDataProvider provides data in terms of arrays, each representing a row of
 query result.

 Like other data providers, CSqlDataProvider also supports sorting and
 pagination. It does so by modifying the given |CSqlDataProvider::sql|
 statement with "ORDER BY" and "LIMIT" clauses. You may configure the
 |CSqlDataProvider::sort| and |CSqlDataProvider::pagination| properties to
 customize sorting and pagination behaviors.

 CSqlDataProvider may be used in the following way:
>
 $count=Yii::app()->db->createCommand('SELECT COUNT(*) FROM
 tbl_user')->queryScalar();
 $sql='SELECT * FROM tbl_user';
 $dataProvider=new CSqlDataProvider($sql, array(
     'totalItemCount'=>$count,
     'sort'=>array(
         'attributes'=>array(
              'id', 'username', 'email',
         ),
     ),
     'pagination'=>array(
         'pageSize'=>10,
     ),
 ));
 // $dataProvider->getData() will return a list of arrays.
<
 Note: if you want to use the pagination feature, you must configure the
 |CSqlDataProvider::totalItemCount| property to be the total number of rows
 (without pagination). And if you want to use the sorting feature, you must
 configure |CSqlDataProvider::sort| property so that the provider knows which
 columns can be sorted.


PROPERTY DETAILS
------------------------------------------------------------------------------

<data>					*CSqlDataProvider::data*
 See |CDataProvider::data|

<db>					*CSqlDataProvider::db*
 (CDbConnection) the database connection to be used in the queries. Defaults
 to null, meaning using Yii::app()->db.

<id>					*CSqlDataProvider::id*
 See |CDataProvider::id|

<itemCount>				*CSqlDataProvider::itemCount*
 See |CDataProvider::itemCount|

<keyField>				*CSqlDataProvider::keyField*
 (string) the name of key field. Defaults to 'id'.

<keys>					*CSqlDataProvider::keys*
 See |CDataProvider::keys|

<pagination>				*CSqlDataProvider::pagination*
 See |CDataProvider::pagination|

<params>				*CSqlDataProvider::params*
 (array) parameters (name=>value) to be bound to the SQL statement.

<sort>					*CSqlDataProvider::sort*
 See |CDataProvider::sort|

<sql>					*CSqlDataProvider::sql*
 (string|CDbCommand) the SQL statement to be used for fetching data rows.
 Since version 1.1.13 this can also be an instance of |CDbCommand|.

<totalItemCount>			*CSqlDataProvider::totalItemCount*
 See |CDataProvider::totalItemCount|



METHOD DETAILS
------------------------------------------------------------------------------

*CSqlDataProvider::__call*					 public
 See |CComponent::__call|


*CSqlDataProvider::__construct* 				 public
>
 __construct($sql, $config=array())
<
(void)

 Constructor.
    [sql] (string|CDbCommand) the SQL statement to be used for fetching data
    rows. Since version 1.1.13 this can also be an instance of |CDbCommand|.
    [config] (array) configuration (name=>value) to be applied as the initial
    property values of this class.


*CSqlDataProvider::__get*					 public
 See |CComponent::__get|


*CSqlDataProvider::__isset*					 public
 See |CComponent::__isset|


*CSqlDataProvider::__set*					 public
 See |CComponent::__set|


*CSqlDataProvider::__unset*					 public
 See |CComponent::__unset|


*CSqlDataProvider::asa* 					 public
 See |CComponent::asa|


*CSqlDataProvider::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CSqlDataProvider::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CSqlDataProvider::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CSqlDataProvider::calculateTotalItemCount*			 protected
>
 calculateTotalItemCount()
<
(integer) the total number of data items.

 Calculates the total number of data items. This method is invoked when
 |CSqlDataProvider::getTotalItemCount| is invoked and
 |CSqlDataProvider::totalItemCount| is not set previously. The default
 implementation simply returns 0. You may override this method to return
 accurate total number of data items.


*CSqlDataProvider::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CSqlDataProvider::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CSqlDataProvider::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CSqlDataProvider::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CSqlDataProvider::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CSqlDataProvider::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CSqlDataProvider::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CSqlDataProvider::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CSqlDataProvider::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CSqlDataProvider::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CSqlDataProvider::fetchData*					 protected
>
 fetchData()
<
(array) list of data items

 Fetches the data from the persistent data storage.


*CSqlDataProvider::fetchKeys*					 protected
>
 fetchKeys()
<
(array) list of data item keys.

 Fetches the data item keys from the persistent data storage.


*CSqlDataProvider::getData*					 public
 See |CDataProvider::getData|


*CSqlDataProvider::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CSqlDataProvider::getId*					 public
 See |CDataProvider::getId|


*CSqlDataProvider::getItemCount*				 public
 See |CDataProvider::getItemCount|


*CSqlDataProvider::getKeys*					 public
 See |CDataProvider::getKeys|


*CSqlDataProvider::getPagination*				 public
 See |CDataProvider::getPagination|


*CSqlDataProvider::getSort*					 public
 See |CDataProvider::getSort|


*CSqlDataProvider::getTotalItemCount*				 public
 See |CDataProvider::getTotalItemCount|


*CSqlDataProvider::hasEvent*					 public
 See |CComponent::hasEvent|


*CSqlDataProvider::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CSqlDataProvider::hasProperty* 				 public
 See |CComponent::hasProperty|


*CSqlDataProvider::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CSqlDataProvider::setData*					 public
 See |CDataProvider::setData|


*CSqlDataProvider::setId*					 public
 See |CDataProvider::setId|


*CSqlDataProvider::setKeys*					 public
 See |CDataProvider::setKeys|


*CSqlDataProvider::setPagination*				 public
 See |CDataProvider::setPagination|


*CSqlDataProvider::setSort*					 public
 See |CDataProvider::setSort|


*CSqlDataProvider::setTotalItemCount*				 public
 See |CDataProvider::setTotalItemCount|



 vim:tw=78:ts=8:ft=help:norl:
