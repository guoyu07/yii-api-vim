
*CPhpMessageSource*   >> |CMessageSource| >> |CApplicationComponent| >> |CComponent|
===================

 CPhpMessageSource represents a message source that stores translated messages
 in PHP scripts.

 CPhpMessageSource uses PHP files and arrays to keep message translations.
   All translations are saved under the |CPhpMessageSource::basePath|
   directory.
   Translations in one language are kept as PHP files under an
   individual subdirectory   whose name is the same as the language
   ID. Each PHP file contains messages   belonging to the same
   category, and the file name is the same as the category name.
   Within a PHP file, an array of (source, translation) pairs is
   returned. For example:
>
 return array(
     'original message 1' => 'translated message 1',
     'original message 2' => 'translated message 2',
 );
<
 When |CPhpMessageSource::cachingDuration| is set as a positive number,
 message translations will be cached.

 Messages for an extension class (e.g. a widget, a module) can be specially
 managed and used. In particular, if a message belongs to an extension whose
 class name is Xyz, then the message category can be specified in the format
 of 'Xyz.categoryName'. And the corresponding message file is assumed to be
 'BasePath/messages/LanguageID/categoryName.php', where 'BasePath' refers to
 the directory that contains the extension class file. When using Yii::t() to
 translate an extension message, the category name should be set as
 'Xyz.categoryName'.


PROPERTY DETAILS
------------------------------------------------------------------------------

<basePath>				*CPhpMessageSource::basePath*
 (string) the base path for all translated messages. Defaults to null, meaning
 the "messages" subdirectory of the application directory (e.g.
 "protected/messages").

<behaviors>				*CPhpMessageSource::behaviors*
 See |CApplicationComponent::behaviors|

<cacheID>				*CPhpMessageSource::cacheID*
 (string) the ID of the cache application component that is used to cache the
 messages. Defaults to 'cache' which refers to the primary cache application
 component. Set this property to false if you want to disable caching the
 messages.

<cachingDuration>			*CPhpMessageSource::cachingDuration*
 (integer) the time in seconds that the messages can remain valid in cache.
 Defaults to 0, meaning the caching is disabled.

<forceTranslation>			*CPhpMessageSource::forceTranslation*
 See |CMessageSource::forceTranslation|

<isInitialized> 			*CPhpMessageSource::isInitialized*
 See |CApplicationComponent::isInitialized|

<language>				*CPhpMessageSource::language*
 See |CMessageSource::language|



METHOD DETAILS
------------------------------------------------------------------------------

*CPhpMessageSource::__call*					 public
 See |CComponent::__call|


*CPhpMessageSource::__get*					 public
 See |CComponent::__get|


*CPhpMessageSource::__isset*					 public
 See |CComponent::__isset|


*CPhpMessageSource::__set*					 public
 See |CComponent::__set|


*CPhpMessageSource::__unset*					 public
 See |CComponent::__unset|


*CPhpMessageSource::asa*					 public
 See |CComponent::asa|


*CPhpMessageSource::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CPhpMessageSource::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CPhpMessageSource::attachEventHandler* 			 public
 See |CComponent::attachEventHandler|


*CPhpMessageSource::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CPhpMessageSource::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CPhpMessageSource::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CPhpMessageSource::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CPhpMessageSource::detachEventHandler* 			 public
 See |CComponent::detachEventHandler|


*CPhpMessageSource::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CPhpMessageSource::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CPhpMessageSource::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CPhpMessageSource::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CPhpMessageSource::evaluateExpression* 			 public
 See |CComponent::evaluateExpression|


*CPhpMessageSource::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CPhpMessageSource::getIsInitialized*				 public
 See |CApplicationComponent::getIsInitialized|


*CPhpMessageSource::getLanguage*				 public
 See |CMessageSource::getLanguage|


*CPhpMessageSource::getMessageFile*				 protected
>
 getMessageFile($category, $language)
<
(string) the message file path

 Determines the message file name based on the given category and language. If
 the category name contains a dot, it will be split into the module class name
 and the category name. In this case, the message file will be assumed to be
 located within the 'messages' subdirectory of the directory containing the
 module class file. Otherwise, the message file is assumed to be under the
 |CPhpMessageSource::basePath|.
    [category] (string) category name
    [language] (string) language ID


*CPhpMessageSource::hasEvent*					 public
 See |CComponent::hasEvent|


*CPhpMessageSource::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CPhpMessageSource::hasProperty*				 public
 See |CComponent::hasProperty|


*CPhpMessageSource::init*					 public
>
 init()
<
(void)

 Initializes the application component. This method overrides the parent
 implementation by preprocessing the user request data.


*CPhpMessageSource::loadMessages*				 protected
>
 loadMessages($category, $language)
<
(array) the loaded messages

 Loads the message translation for the specified language and category.
    [category] (string) the message category
    [language] (string) the target language


*CPhpMessageSource::onMissingTranslation*			 public
 See |CMessageSource::onMissingTranslation|


*CPhpMessageSource::raiseEvent* 				 public
 See |CComponent::raiseEvent|


*CPhpMessageSource::setLanguage*				 public
 See |CMessageSource::setLanguage|


*CPhpMessageSource::translate*					 public
 See |CMessageSource::translate|


*CPhpMessageSource::translateMessage*				 protected
 See |CMessageSource::translateMessage|



 vim:tw=78:ts=8:ft=help:norl:
