
*CWsdlGenerator*   >> |CComponent|
================

 CWsdlGenerator generates the WSDL for a given service class.

 The WSDL generation is based on the doc comments found in the service class
 file. In particular, it recognizes the '@soap' tag in the comment and
 extracts API method and type definitions.

 In a service class, a remote invokable method must be a public method with a
 doc comment block containing the '@soap' tag. In the doc comment, the type
 and name of every input parameter and the type of the return value should be
 declared using the standard phpdoc format.

 CWsdlGenerator recognizes the following primitive types (case-sensitive) in
 the parameter and return type declarations:
   str/string: maps to xsd:string;
   int/integer: maps to xsd:int;
   float/double: maps to xsd:float;
   bool/boolean: maps to xsd:boolean;
   {date} maps to xsd:date;
   {time} maps to xsd:time;
   {datetime} maps to xsd:dateTime;
   {array} maps to xsd:string;
   {object} maps to xsd:struct;
   {mixed} maps to xsd:anyType.If a type is not a primitive type, it is
 considered as a class type, and CWsdlGenerator will look for its property
 declarations. Only public properties are considered, and they each must be
 associated with a doc comment block containg the '@soap' tag. The doc comment
 block should declare the type of the property.

 CWsdlGenerator recognizes the array type with the following format:
>
 typeName[]: maps to tns:typeNameArray
<
 The following is an example declaring a remote invokable method:
>
 / **
   * A foo method.
   * @param string name of something
   * @param string value of something
   * @return string[] some array
   * @soap
   * /
 public function foo($name,$value) {...}
<
 And the following is an example declaring a class with remote accessible
 properties:
>
 class Foo {
     / **
       * @var string name of foo {nillable = 1, minOccurs=0, maxOccurs = 2}
       * @soap
       * /
     public $name;
     / **
       * @var Member[] members of foo
       * @soap
       * /
     public $members;
 }
<
 In the above, the 'members' property is an array of 'Member' objects. Since
 'Member' is not a primitive type, CWsdlGenerator will look further to find
 the definition of 'Member'.

 Optionally, extra attributes (nillable, minOccurs, maxOccurs) can be defined
 for each  property by enclosing definitions into curly brackets and separated
 by comma like so:

 {[attribute1 = value1], [attribute2 = value2], ...}

 where the attribute can be one of following:  nillable = [0|1|true|false] 
 minOccurs = n; where n>=0  maxOccurs = n; where n>=0


PROPERTY DETAILS
------------------------------------------------------------------------------

<messages>				*CWsdlGenerator::messages*
 ()

<namespace>				*CWsdlGenerator::namespace*
 (string) the namespace to be used in the generated WSDL. If not set, it
 defaults to the name of the class that WSDL is generated upon.

<operations>				*CWsdlGenerator::operations*
 ()

<serviceName>				*CWsdlGenerator::serviceName*
 (string) the name of the generated WSDL. If not set, it defaults to
 "urn:{$className}wsdl".

<typeMap>				*CWsdlGenerator::typeMap*
 ()

<types> 				*CWsdlGenerator::types*
 ()



METHOD DETAILS
------------------------------------------------------------------------------

*CWsdlGenerator::__call*					 public
 See |CComponent::__call|


*CWsdlGenerator::__get* 					 public
 See |CComponent::__get|


*CWsdlGenerator::__isset*					 public
 See |CComponent::__isset|


*CWsdlGenerator::__set* 					 public
 See |CComponent::__set|


*CWsdlGenerator::__unset*					 public
 See |CComponent::__unset|


*CWsdlGenerator::addBindings*					 protected
>
 addBindings($dom)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree


*CWsdlGenerator::addMessages*					 protected
>
 addMessages($dom)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree


*CWsdlGenerator::addPortTypes*					 protected
>
 addPortTypes($dom)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree


*CWsdlGenerator::addService*					 protected
>
 addService($dom, $serviceUrl)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree
    [serviceUrl] (string) Web service URL


*CWsdlGenerator::addTypes*					 protected
>
 addTypes($dom)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree


*CWsdlGenerator::asa*						 public
 See |CComponent::asa|


*CWsdlGenerator::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CWsdlGenerator::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CWsdlGenerator::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CWsdlGenerator::buildDOM*					 protected
>
 buildDOM($serviceUrl, $encoding)
<
(void)

    [serviceUrl] (string) Web service URL
    [encoding] (string) encoding of the WSDL. Defaults to 'UTF-8'.


*CWsdlGenerator::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CWsdlGenerator::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CWsdlGenerator::createOperationElement*			 protected
>
 createOperationElement($dom, $name)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree
    [name] (string) method name


*CWsdlGenerator::createPortElement*				 protected
>
 createPortElement($dom, $name, $doc)
<
(void)

    [dom] (DOMDocument) Represents an entire HTML or XML document; serves as
    the root of the document tree
    [name] (string) method name
    [doc] (string) doc


*CWsdlGenerator::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CWsdlGenerator::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CWsdlGenerator::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CWsdlGenerator::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CWsdlGenerator::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CWsdlGenerator::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CWsdlGenerator::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CWsdlGenerator::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CWsdlGenerator::generateWsdl*					 public
>
 generateWsdl($className, $serviceUrl, $encoding='UTF-8')
<
(string) the generated WSDL

 Generates the WSDL for the given class.
    [className] (string) class name
    [serviceUrl] (string) Web service URL
    [encoding] (string) encoding of the WSDL. Defaults to 'UTF-8'.


*CWsdlGenerator::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CWsdlGenerator::hasEvent*					 public
 See |CComponent::hasEvent|


*CWsdlGenerator::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CWsdlGenerator::hasProperty*					 public
 See |CComponent::hasProperty|


*CWsdlGenerator::processMethod* 				 protected
>
 processMethod($method)
<
(void)

    [method] (ReflectionMethod) method


*CWsdlGenerator::processType*					 protected
>
 processType($type)
<
(void)

    [type] (string) PHP variable type


*CWsdlGenerator::raiseEvent*					 public
 See |CComponent::raiseEvent|



 vim:tw=78:ts=8:ft=help:norl:
