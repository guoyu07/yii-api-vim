
*CBooleanValidator*   >> |CValidator| >> |CComponent|
===================

 CBooleanValidator validates that the attribute value is either
 |CBooleanValidator::trueValue|  or |CBooleanValidator::falseValue|.

 When using the |CBooleanValidator::message| property to define a custom error
 message, the message may contain additional placeholders that will be
 replaced with the actual content. In addition to the "{attribute}"
 placeholder, recognized by all validators (see |CValidator|),
 CBooleanValidator allows for the following placeholders to be specified:
   {true}: replaced with value representing the true status
   |CBooleanValidator::trueValue|.
   {false}: replaced with value representing the false status
   |CBooleanValidator::falseValue|.


PROPERTY DETAILS
------------------------------------------------------------------------------

<allowEmpty>				*CBooleanValidator::allowEmpty*
 (boolean) whether the attribute value can be null or empty. Defaults to true,
 meaning that if the attribute is empty, it is considered valid.

<attributes>				*CBooleanValidator::attributes*
 See |CValidator::attributes|

<builtInValidators>			*CBooleanValidator::builtInValidators*
 See |CValidator::builtInValidators|

<enableClientValidation>		*CBooleanValidator::enableClientValidation*
 See |CValidator::enableClientValidation|

<except>				*CBooleanValidator::except*
 See |CValidator::except|

<falseValue>				*CBooleanValidator::falseValue*
 (mixed) the value representing false status. Defaults to '0'.

<message>				*CBooleanValidator::message*
 See |CValidator::message|

<on>					*CBooleanValidator::on*
 See |CValidator::on|

<safe>					*CBooleanValidator::safe*
 See |CValidator::safe|

<skipOnError>				*CBooleanValidator::skipOnError*
 See |CValidator::skipOnError|

<strict>				*CBooleanValidator::strict*
 (boolean) whether the comparison to |CBooleanValidator::trueValue| and
 |CBooleanValidator::falseValue| is strict. When this is true, the attribute
 value and type must both match those of |CBooleanValidator::trueValue| or
 |CBooleanValidator::falseValue|. Defaults to false, meaning only the value
 needs to be matched.

<trueValue>				*CBooleanValidator::trueValue*
 (mixed) the value representing true status. Defaults to '1'.



METHOD DETAILS
------------------------------------------------------------------------------

*CBooleanValidator::__call*					 public
 See |CComponent::__call|


*CBooleanValidator::__get*					 public
 See |CComponent::__get|


*CBooleanValidator::__isset*					 public
 See |CComponent::__isset|


*CBooleanValidator::__set*					 public
 See |CComponent::__set|


*CBooleanValidator::__unset*					 public
 See |CComponent::__unset|


*CBooleanValidator::addError*					 protected
 See |CValidator::addError|


*CBooleanValidator::applyTo*					 public
 See |CValidator::applyTo|


*CBooleanValidator::asa*					 public
 See |CComponent::asa|


*CBooleanValidator::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CBooleanValidator::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CBooleanValidator::attachEventHandler* 			 public
 See |CComponent::attachEventHandler|


*CBooleanValidator::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CBooleanValidator::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CBooleanValidator::clientValidateAttribute*			 public
>
 clientValidateAttribute($object, $attribute)
<
(string) the client-side validation script.

 Returns the JavaScript needed for performing client-side validation.
    [object] (CModel) the data object being validated
    [attribute] (string) the name of the attribute to be validated.


*CBooleanValidator::createValidator*				 public
 See |CValidator::createValidator|


*CBooleanValidator::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CBooleanValidator::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CBooleanValidator::detachEventHandler* 			 public
 See |CComponent::detachEventHandler|


*CBooleanValidator::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CBooleanValidator::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CBooleanValidator::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CBooleanValidator::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CBooleanValidator::evaluateExpression* 			 public
 See |CComponent::evaluateExpression|


*CBooleanValidator::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CBooleanValidator::hasEvent*					 public
 See |CComponent::hasEvent|


*CBooleanValidator::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CBooleanValidator::hasProperty*				 public
 See |CComponent::hasProperty|


*CBooleanValidator::isEmpty*					 protected
 See |CValidator::isEmpty|


*CBooleanValidator::raiseEvent* 				 public
 See |CComponent::raiseEvent|


*CBooleanValidator::validate*					 public
 See |CValidator::validate|


*CBooleanValidator::validateAttribute*				 protected
>
 validateAttribute($object, $attribute)
<
(void)

 Validates the attribute of the object. If there is any error, the error
 message is added to the object.
    [object] (CModel) the object being validated
    [attribute] (string) the attribute being validated



 vim:tw=78:ts=8:ft=help:norl:
