
*CGettextMessageSource*   >> |CMessageSource| >> |CApplicationComponent| >> |CComponent|
=======================

 CGettextMessageSource represents a message source that is based on GNU
 Gettext.

 Each CGettextMessageSource instance represents the message tranlations for a
 single domain. And each message category represents a message context in
 Gettext. Translated messages are stored as either a MO or PO file, depending
 on the |CGettextMessageSource::useMoFile| property value.

 All translations are saved under the |CGettextMessageSource::basePath|
 directory. Translations in one language are kept as MO or PO files under an
 individual subdirectory whose name is the language ID. The file name is
 specified via |CGettextMessageSource::catalog| property, which defaults to
 'messages'.


PROPERTY DETAILS
------------------------------------------------------------------------------

<basePath>				*CGettextMessageSource::basePath*
 (string) the base path for all translated messages. Defaults to null, meaning
 the "messages" subdirectory of the application directory (e.g.
 "protected/messages").

<behaviors>				*CGettextMessageSource::behaviors*
 See |CApplicationComponent::behaviors|

<cacheID>				*CGettextMessageSource::cacheID*
 (string) the ID of the cache application component that is used to cache the
 messages. Defaults to 'cache' which refers to the primary cache application
 component. Set this property to false if you want to disable caching the
 messages.

<cachingDuration>			*CGettextMessageSource::cachingDuration*
 (integer) the time in seconds that the messages can remain valid in cache.
 Defaults to 0, meaning the caching is disabled.

<catalog>				*CGettextMessageSource::catalog*
 (string) the message catalog name. This is the name of the message file
 (without extension) that stores the translated messages. Defaults to
 'messages'.

<forceTranslation>			*CGettextMessageSource::forceTranslation*
 See |CMessageSource::forceTranslation|

<isInitialized> 			*CGettextMessageSource::isInitialized*
 See |CApplicationComponent::isInitialized|

<language>				*CGettextMessageSource::language*
 See |CMessageSource::language|

<useBigEndian>				*CGettextMessageSource::useBigEndian*
 (boolean) whether to use Big Endian to read and write MO files. Defaults to
 false. This property is only used when |CGettextMessageSource::useMoFile| is
 true.

<useMoFile>				*CGettextMessageSource::useMoFile*
 (boolean) whether to load messages from MO files. Defaults to true. If false,
 messages will be loaded from PO files.



METHOD DETAILS
------------------------------------------------------------------------------

*CGettextMessageSource::__call* 				 public
 See |CComponent::__call|


*CGettextMessageSource::__get*					 public
 See |CComponent::__get|


*CGettextMessageSource::__isset*				 public
 See |CComponent::__isset|


*CGettextMessageSource::__set*					 public
 See |CComponent::__set|


*CGettextMessageSource::__unset*				 public
 See |CComponent::__unset|


*CGettextMessageSource::asa*					 public
 See |CComponent::asa|


*CGettextMessageSource::attachBehavior* 			 public
 See |CComponent::attachBehavior|


*CGettextMessageSource::attachBehaviors*			 public
 See |CComponent::attachBehaviors|


*CGettextMessageSource::attachEventHandler*			 public
 See |CComponent::attachEventHandler|


*CGettextMessageSource::canGetProperty* 			 public
 See |CComponent::canGetProperty|


*CGettextMessageSource::canSetProperty* 			 public
 See |CComponent::canSetProperty|


*CGettextMessageSource::detachBehavior* 			 public
 See |CComponent::detachBehavior|


*CGettextMessageSource::detachBehaviors*			 public
 See |CComponent::detachBehaviors|


*CGettextMessageSource::detachEventHandler*			 public
 See |CComponent::detachEventHandler|


*CGettextMessageSource::disableBehavior*			 public
 See |CComponent::disableBehavior|


*CGettextMessageSource::disableBehaviors*			 public
 See |CComponent::disableBehaviors|


*CGettextMessageSource::enableBehavior* 			 public
 See |CComponent::enableBehavior|


*CGettextMessageSource::enableBehaviors*			 public
 See |CComponent::enableBehaviors|


*CGettextMessageSource::evaluateExpression*			 public
 See |CComponent::evaluateExpression|


*CGettextMessageSource::getEventHandlers*			 public
 See |CComponent::getEventHandlers|


*CGettextMessageSource::getIsInitialized*			 public
 See |CApplicationComponent::getIsInitialized|


*CGettextMessageSource::getLanguage*				 public
 See |CMessageSource::getLanguage|


*CGettextMessageSource::hasEvent*				 public
 See |CComponent::hasEvent|


*CGettextMessageSource::hasEventHandler*			 public
 See |CComponent::hasEventHandler|


*CGettextMessageSource::hasProperty*				 public
 See |CComponent::hasProperty|


*CGettextMessageSource::init*					 public
>
 init()
<
(void)

 Initializes the application component. This method overrides the parent
 implementation by preprocessing the user request data.


*CGettextMessageSource::loadMessages*				 protected
>
 loadMessages($category, $language)
<
(array) the loaded messages

 Loads the message translation for the specified language and category.
    [category] (string) the message category
    [language] (string) the target language


*CGettextMessageSource::onMissingTranslation*			 public
 See |CMessageSource::onMissingTranslation|


*CGettextMessageSource::raiseEvent*				 public
 See |CComponent::raiseEvent|


*CGettextMessageSource::setLanguage*				 public
 See |CMessageSource::setLanguage|


*CGettextMessageSource::translate*				 public
 See |CMessageSource::translate|


*CGettextMessageSource::translateMessage*			 protected
 See |CMessageSource::translateMessage|



 vim:tw=78:ts=8:ft=help:norl:
