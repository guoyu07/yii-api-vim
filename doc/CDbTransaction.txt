
*CDbTransaction*   >> |CComponent|
================

 CDbTransaction represents a DB transaction.

 It is usually created by calling |CDbConnection::beginTransaction|.

 The following code is a common scenario of using transactions:
>
 $transaction=$connection->beginTransaction();
 try
 {
    $connection->createCommand($sql1)->execute();
    $connection->createCommand($sql2)->execute();
    //.... other SQL executions
    $transaction->commit();
 }
 catch(Exception $e)
 {
    $transaction->rollback();
 }
<


PROPERTY DETAILS
------------------------------------------------------------------------------

<active>				*CDbTransaction::active*
 (boolean) whether this transaction is active

<connection>				*CDbTransaction::connection*
 (CDbConnection) the DB connection for this transaction



METHOD DETAILS
------------------------------------------------------------------------------

*CDbTransaction::__call*					 public
 See |CComponent::__call|


*CDbTransaction::__construct*					 public
>
 __construct($connection)
<
(void)

 Constructor.
    [connection] (CDbConnection) the connection associated with this
    transaction


*CDbTransaction::__get* 					 public
 See |CComponent::__get|


*CDbTransaction::__isset*					 public
 See |CComponent::__isset|


*CDbTransaction::__set* 					 public
 See |CComponent::__set|


*CDbTransaction::__unset*					 public
 See |CComponent::__unset|


*CDbTransaction::asa*						 public
 See |CComponent::asa|


*CDbTransaction::attachBehavior*				 public
 See |CComponent::attachBehavior|


*CDbTransaction::attachBehaviors*				 public
 See |CComponent::attachBehaviors|


*CDbTransaction::attachEventHandler*				 public
 See |CComponent::attachEventHandler|


*CDbTransaction::canGetProperty*				 public
 See |CComponent::canGetProperty|


*CDbTransaction::canSetProperty*				 public
 See |CComponent::canSetProperty|


*CDbTransaction::commit*					 public
>
 commit()
<
(void)

 Commits a transaction.


*CDbTransaction::detachBehavior*				 public
 See |CComponent::detachBehavior|


*CDbTransaction::detachBehaviors*				 public
 See |CComponent::detachBehaviors|


*CDbTransaction::detachEventHandler*				 public
 See |CComponent::detachEventHandler|


*CDbTransaction::disableBehavior*				 public
 See |CComponent::disableBehavior|


*CDbTransaction::disableBehaviors*				 public
 See |CComponent::disableBehaviors|


*CDbTransaction::enableBehavior*				 public
 See |CComponent::enableBehavior|


*CDbTransaction::enableBehaviors*				 public
 See |CComponent::enableBehaviors|


*CDbTransaction::evaluateExpression*				 public
 See |CComponent::evaluateExpression|


*CDbTransaction::getActive*					 public
>
 getActive()
<
(boolean) whether this transaction is active



*CDbTransaction::getConnection* 				 public
>
 getConnection()
<
(CDbConnection) the DB connection for this transaction



*CDbTransaction::getEventHandlers*				 public
 See |CComponent::getEventHandlers|


*CDbTransaction::hasEvent*					 public
 See |CComponent::hasEvent|


*CDbTransaction::hasEventHandler*				 public
 See |CComponent::hasEventHandler|


*CDbTransaction::hasProperty*					 public
 See |CComponent::hasProperty|


*CDbTransaction::raiseEvent*					 public
 See |CComponent::raiseEvent|


*CDbTransaction::rollback*					 public
>
 rollback()
<
(void)

 Rolls back a transaction.


*CDbTransaction::setActive*					 protected
>
 setActive($value)
<
(void)

    [value] (boolean) whether this transaction is active



 vim:tw=78:ts=8:ft=help:norl:
