
*CWinCache*   >> |CCache| >> |CApplicationComponent| >> |CComponent|
===========

 CWinCache implements a cache application component based on 'WinCache'.

 To use this application component, the WinCache PHP extension must be loaded.

 See |CCache| manual for common cache operations that are supported by
 CWinCache.



METHOD DETAILS
------------------------------------------------------------------------------

*CWinCache::__call*						 public
 See |CComponent::__call|


*CWinCache::__get*						 public
 See |CComponent::__get|


*CWinCache::__isset*						 public
 See |CComponent::__isset|


*CWinCache::__set*						 public
 See |CComponent::__set|


*CWinCache::__unset*						 public
 See |CComponent::__unset|


*CWinCache::add*						 public
 See |CCache::add|


*CWinCache::addValue*						 protected
>
 addValue($key, $value, $expire)
<
(boolean) true if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key into cache if the cache does not contain
 this key. This is the implementation of the method declared in the parent
 class.
    [key] (string) the key identifying the value to be cached
    [value] (string) the value to be cached
    [expire] (integer) the number of seconds in which the cached value will
    expire. 0 means never expire.


*CWinCache::asa*						 public
 See |CComponent::asa|


*CWinCache::attachBehavior*					 public
 See |CComponent::attachBehavior|


*CWinCache::attachBehaviors*					 public
 See |CComponent::attachBehaviors|


*CWinCache::attachEventHandler* 				 public
 See |CComponent::attachEventHandler|


*CWinCache::canGetProperty*					 public
 See |CComponent::canGetProperty|


*CWinCache::canSetProperty*					 public
 See |CComponent::canSetProperty|


*CWinCache::delete*						 public
 See |CCache::delete|


*CWinCache::deleteValue*					 protected
>
 deleteValue($key)
<
(boolean) if no error happens during deletion

 Deletes a value with the specified key from cache This is the implementation
 of the method declared in the parent class.
    [key] (string) the key of the value to be deleted


*CWinCache::detachBehavior*					 public
 See |CComponent::detachBehavior|


*CWinCache::detachBehaviors*					 public
 See |CComponent::detachBehaviors|


*CWinCache::detachEventHandler* 				 public
 See |CComponent::detachEventHandler|


*CWinCache::disableBehavior*					 public
 See |CComponent::disableBehavior|


*CWinCache::disableBehaviors*					 public
 See |CComponent::disableBehaviors|


*CWinCache::enableBehavior*					 public
 See |CComponent::enableBehavior|


*CWinCache::enableBehaviors*					 public
 See |CComponent::enableBehaviors|


*CWinCache::evaluateExpression* 				 public
 See |CComponent::evaluateExpression|


*CWinCache::flush*						 public
 See |CCache::flush|


*CWinCache::flushValues*					 protected
>
 flushValues()
<
(boolean) whether the flush operation was successful.

 Deletes all values from cache. This is the implementation of the method
 declared in the parent class.


*CWinCache::generateUniqueKey*					 protected
 See |CCache::generateUniqueKey|


*CWinCache::get*						 public
 See |CCache::get|


*CWinCache::getEventHandlers*					 public
 See |CComponent::getEventHandlers|


*CWinCache::getIsInitialized*					 public
 See |CApplicationComponent::getIsInitialized|


*CWinCache::getValue*						 protected
>
 getValue($key)
<
(string|boolean) the value stored in cache, false if the value is not in the
cache or expired.

 Retrieves a value from cache with a specified key. This is the implementation
 of the method declared in the parent class.
    [key] (string) a unique key identifying the cached value


*CWinCache::getValues*						 protected
>
 getValues($keys)
<
(array) a list of cached values indexed by the keys

 Retrieves multiple values from cache with the specified keys.
    [keys] (array) a list of keys identifying the cached values


*CWinCache::hasEvent*						 public
 See |CComponent::hasEvent|


*CWinCache::hasEventHandler*					 public
 See |CComponent::hasEventHandler|


*CWinCache::hasProperty*					 public
 See |CComponent::hasProperty|


*CWinCache::init*						 public
>
 init()
<
(void)

 Initializes this application component. This method is required by the
 |IApplicationComponent| interface. It checks the availability of WinCache
 extension and WinCache user cache.


*CWinCache::mget*						 public
 See |CCache::mget|


*CWinCache::offsetExists*					 public
 See |CCache::offsetExists|


*CWinCache::offsetGet*						 public
 See |CCache::offsetGet|


*CWinCache::offsetSet*						 public
 See |CCache::offsetSet|


*CWinCache::offsetUnset*					 public
 See |CCache::offsetUnset|


*CWinCache::raiseEvent* 					 public
 See |CComponent::raiseEvent|


*CWinCache::set*						 public
 See |CCache::set|


*CWinCache::setValue*						 protected
>
 setValue($key, $value, $expire)
<
(boolean) true if the value is successfully stored into cache, false otherwise

 Stores a value identified by a key in cache. This is the implementation of
 the method declared in the parent class.
    [key] (string) the key identifying the value to be cached
    [value] (string) the value to be cached
    [expire] (integer) the number of seconds in which the cached value will
    expire. 0 means never expire.



 vim:tw=78:ts=8:ft=help:norl:
