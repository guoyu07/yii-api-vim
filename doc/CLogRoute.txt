
*CLogRoute*   >> |CComponent|
===========

 CLogRoute is the base class for all log route classes.

 A log route object retrieves log messages from a logger and sends it
 somewhere, such as files, emails. The messages being retrieved may be
 filtered first before being sent to the destination. The filters include log
 level filter and log category filter.

 To specify level filter, set |CLogRoute::levels| property, which takes a
 string of comma-separated desired level names (e.g. 'Error, Debug'). To
 specify category filter, set |CLogRoute::categories| property, which takes a
 string of comma-separated desired category names (e.g. 'System.Web,
 System.IO').

 Level filter and category filter are combinational, i.e., only messages
 satisfying both filter conditions will they be returned.


PROPERTY DETAILS
------------------------------------------------------------------------------

<categories>				*CLogRoute::categories*
 (mixed) array of categories, or string list separated by comma or space. 
 Defaults to empty array, meaning all categories.

<enabled>				*CLogRoute::enabled*
 (boolean) whether to enable this log route. Defaults to true.

<except>				*CLogRoute::except*
 (mixed) array of categories, or string list separated by comma or space, to
 EXCLUDE from logs. Defaults to empty array, meaning no categories are
 excluded. This will exclude any categories after $categories has been ran.

<filter>				*CLogRoute::filter*
 (mixed) the additional filter (eg |CLogFilter|) that can be applied to the
 log messages. The value of this property will be passed to
 |Yii::createComponent| to create a log filter object. As a result, this can
 be either a string representing the filter class name or an array
 representing the filter configuration. In general, the log filter class
 should implement |ILogFilter| interface. If you want to apply multiple
 filters you can use |CChainedLogFilter| to do so. Defaults to null, meaning
 no filter will be used.

<levels>				*CLogRoute::levels*
 (string) list of levels separated by comma or space. Defaults to empty,
 meaning all levels.

<logs>					*CLogRoute::logs*
 (array) the logs that are collected so far by this log route.



METHOD DETAILS
------------------------------------------------------------------------------

*CLogRoute::__call*						 public
 See |CComponent::__call|


*CLogRoute::__get*						 public
 See |CComponent::__get|


*CLogRoute::__isset*						 public
 See |CComponent::__isset|


*CLogRoute::__set*						 public
 See |CComponent::__set|


*CLogRoute::__unset*						 public
 See |CComponent::__unset|


*CLogRoute::asa*						 public
 See |CComponent::asa|


*CLogRoute::attachBehavior*					 public
 See |CComponent::attachBehavior|


*CLogRoute::attachBehaviors*					 public
 See |CComponent::attachBehaviors|


*CLogRoute::attachEventHandler* 				 public
 See |CComponent::attachEventHandler|


*CLogRoute::canGetProperty*					 public
 See |CComponent::canGetProperty|


*CLogRoute::canSetProperty*					 public
 See |CComponent::canSetProperty|


*CLogRoute::collectLogs*					 public
>
 collectLogs($logger, $processLogs=false)
<
(void)

 Retrieves filtered log messages from logger for further processing.
    [logger] (CLogger) logger instance
    [processLogs] (boolean) whether to process the logs after they are
    collected from the logger


*CLogRoute::detachBehavior*					 public
 See |CComponent::detachBehavior|


*CLogRoute::detachBehaviors*					 public
 See |CComponent::detachBehaviors|


*CLogRoute::detachEventHandler* 				 public
 See |CComponent::detachEventHandler|


*CLogRoute::disableBehavior*					 public
 See |CComponent::disableBehavior|


*CLogRoute::disableBehaviors*					 public
 See |CComponent::disableBehaviors|


*CLogRoute::enableBehavior*					 public
 See |CComponent::enableBehavior|


*CLogRoute::enableBehaviors*					 public
 See |CComponent::enableBehaviors|


*CLogRoute::evaluateExpression* 				 public
 See |CComponent::evaluateExpression|


*CLogRoute::formatLogMessage*					 protected
>
 formatLogMessage($message, $level, $category, $time)
<
(string) formatted message

 Formats a log message given different fields.
    [message] (string) message content
    [level] (integer) message level
    [category] (string) message category
    [time] (integer) timestamp


*CLogRoute::getEventHandlers*					 public
 See |CComponent::getEventHandlers|


*CLogRoute::hasEvent*						 public
 See |CComponent::hasEvent|


*CLogRoute::hasEventHandler*					 public
 See |CComponent::hasEventHandler|


*CLogRoute::hasProperty*					 public
 See |CComponent::hasProperty|


*CLogRoute::init*						 public
>
 init()
<
(void)

 Initializes the route. This method is invoked after the route is created by
 the route manager.


*CLogRoute::processLogs*					 protected
>
 processLogs($logs)
<
(void)

 Processes log messages and sends them to specific destination. Derived child
 classes must implement this method.
    [logs] (array) list of messages. Each array element represents one message
    with the following structure: array(   [0] => message (string)   [1] =>
    level (string)   [2] => category (string)   [3] => timestamp (float,
    obtained by microtime(true));


*CLogRoute::raiseEvent* 					 public
 See |CComponent::raiseEvent|



 vim:tw=78:ts=8:ft=help:norl:
